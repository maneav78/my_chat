name: CI

on: [push, pull_request]

jobs:
  images:
    name: Image building and pushing
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}


    - name: Set Commit Short SHA
      run: echo "COMMIT_SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

    - name: Build and Push Docker Front Image With Commit SHA
      uses: docker/build-push-action@v5
      with:
        context: ./vue-project
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/chat-front:${{ env.COMMIT_SHORT_SHA }}

    - name: Build and Push Docker Front Image 
      uses: docker/build-push-action@v5
      with:
        context: ./vue-project
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/chat-front:latest

    - name: Build and Push Docker Back Image With Commit SHA
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/chat-back:${{ env.COMMIT_SHORT_SHA }}
      
    - name: Build and Push Docker Back Image 
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/chat-back:latest

  ComposeChecking:
    name: Checking the docker-compose file
    runs-on: ubuntu-latest

    steps:
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Pull Front Image
      run: docker pull maneav78/chat-front:latest

    - name: Pull Back Image
      run: docker pull maneav78/chat-back:latest

    - name: Running docker-compose
      run: docker compose up -d

    - name: Docker Compose down
      run: docker-compose down

  Deploy:
    name: Deploying on k8s 
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Downloading Kind
      run: | 
            curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.23.0/kind-linux-amd64
            chmod +x ./kind
            sudo mv ./kind /usr/local/bin/kind
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

    - name: Creating cluster and applying yaml file
      run: |
            kind create cluster --name my-chat-cluster
            kubectl cluster-info --context kind-my-chat-cluster
            kubectl apply -f ../k8s/deployment.yaml





   